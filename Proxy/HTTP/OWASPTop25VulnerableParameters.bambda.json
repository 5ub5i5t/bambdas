{
    "bambda":{
        "http_history_display_filter":{
            "bambda":"/**\r\n * Filters Proxy HTTP history for requests with vulnerable parameters based on the OWASP Top 25\r\n * @author Tur24Tur / BugBountyzip (https://github.com/BugBountyzip)\r\n **/\r\n\r\n// Define the vulnerable parameters as a Set based on OWASP Top 25\r\nSet<String> parameterNames = Set.of(\r\n    // SSRF parameters\r\n    \"dest\", \"redirect\", \"uri\", \"continue\", \"url\", \"window\", \"data\",\r\n    \"reference\", \"site\", \"html\", \"val\", \"validate\", \"domain\", \"callback\", \"return\",\r\n    \"page\", \"feed\", \"host\", \"port\", \"to\", \"out\", \"dir\",\r\n    // SQL injection parameters\r\n    \"id\", \"select\", \"report\", \"search\", \"category\", \"file\", \"class\", \"news\",\r\n    \"item\", \"menu\", \"ref\", \"title\", \"topic\", \"thread\",\r\n    \"form\", \"main\", \"nav\", \"region\",\r\n    // XSS parameters\r\n    \"q\", \"s\", \"lang\", \"keyword\", \"keywords\", \"year\", \"email\",\r\n    \"type\", \"name\", \"p\", \"month\", \"image\", \"list_type\", \"terms\", \"categoryid\", \"key\",\r\n    \"l\", \"begindate\", \"enddate\",\r\n    // LFI parameters\r\n    \"cat\", \"action\", \"board\", \"date\", \"detail\", \"download\", \"path\", \"folder\",\r\n    \"prefix\", \"include\", \"inc\", \"locate\", \"show\", \"doc\", \"view\",\r\n    \"content\", \"document\", \"layout\", \"mod\", \"conf\",\r\n    // Open Redirect parameters\r\n    \"next\", \"target\", \"rurl\", \"destination\", \"redir\", \"redirect_uri\",\r\n    \"redirect_url\", \"image_url\", \"go\",\r\n    \"returnTo\", \"return_to\", \"checkout_url\", \"return_path\",\r\n    // RCE parameters\r\n    \"cmd\", \"exec\", \"command\", \"execute\", \"ping\", \"query\", \"jump\", \"code\", \"reg\", \"do\",\r\n    \"func\", \"arg\", \"option\", \"load\", \"process\", \"step\", \"read\", \"feature\", \"exe\",\r\n    \"module\", \"payload\", \"run\", \"print\"\r\n);\r\n\r\n// Get the request object\r\nvar request = requestResponse.request();\r\n\r\n// Iterate through each parameter name and check if it exists in the request URL or body\r\nfor (String param : parameterNames) {\r\n    if (request.hasParameter(param, HttpParameterType.URL) || \r\n        request.hasParameter(param, HttpParameterType.BODY)) {\r\n        return true;\r\n    }\r\n}\r\n\r\nreturn false;"
        }
    }
}